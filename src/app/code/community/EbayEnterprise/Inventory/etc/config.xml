<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2013-2014 eBay Enterprise, Inc.

NOTICE OF LICENSE

This source file is subject to the Open Software License (OSL 3.0)
that is bundled with this package in the file LICENSE.md.
It is also available through the world-wide-web at this URL:
http://opensource.org/licenses/osl-3.0.php

@copyright   Copyright (c) 2013-2014 eBay Enterprise, Inc. (http://www.ebayenterprise.com/)
@license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
-->
<config>
    <modules>
        <EbayEnterprise_Inventory>
            <version>0.1.0</version>
        </EbayEnterprise_Inventory>
    </modules>
    <global>
        <models>
            <ebayenterprise_inventory>
                <class>EbayEnterprise_Inventory_Model</class>
            </ebayenterprise_inventory>
        </models>
        <helpers>
            <ebayenterprise_inventory>
                <class>EbayEnterprise_Inventory_Helper</class>
            </ebayenterprise_inventory>
        </helpers>
        <blocks>
            <ebayenterprise_inventoryoverride>
                <class>EbayEnterprise_Inventory_Override_Block</class>
            </ebayenterprise_inventoryoverride>
            <checkout>
                <rewrite>
                    <multishipping_overview>EbayEnterprise_Inventory_Override_Block_Multishipping_Overview</multishipping_overview>
                </rewrite>
            </checkout>
        </blocks>
        <events>
            <!--
                Disable the cataloginventory module's inventory quantity checks.
                If using ROM inventory management, must assume that Magento's
                inventory records are not always up-to-date and cannot be trusted.
            -->
            <sales_quote_item_qty_set_after>
                <observers>
                    <inventory>
                        <type>disabled</type>
                    </inventory>
                    <EbayEnterprise_Eb2cInventory_observer>
                        <type>singleton</type>
                        <class>ebayenterprise_inventory/observer</class>
                        <method>handleAfterSetItemQty</method>
                    </EbayEnterprise_Eb2cInventory_observer>
                </observers>
            </sales_quote_item_qty_set_after>
            <!-- Details Events -->
            <ebayenterprise_order_create_item>
                <observers>
                    <ebayenterprise_inventory_observer1>
                        <type>singleton</type>
                        <class>ebayenterprise_inventory/observer</class>
                        <method>handleEbayEnterpriseOrderCreateItem</method>
                    </ebayenterprise_inventory_observer1>
                </observers>
            </ebayenterprise_order_create_item>
            <ebayenterprise_tax_item_ship_origin>
                <observers>
                    <ebayenterprise_inventory_observer>
                        <type>singleton</type>
                        <class>ebayenterprise_inventory/observer</class>
                        <method>handleEbayEnterpriseTaxItemShipOrigin</method>
                    </ebayenterprise_inventory_observer>
                </observers>
            </ebayenterprise_tax_item_ship_origin>
            <!-- Allocation Events -->
            <sales_order_place_before>
                <observers>
                    <ebayenterprise_inventory_allocation_trigger_observer>
                        <class>ebayenterprise_inventory/observer</class>
                        <method>handleSalesOrderPlaceBefore</method>
                        <type>singleton</type>
                    </ebayenterprise_inventory_allocation_trigger_observer>
                </observers>
            </sales_order_place_before>
            <sales_model_service_quote_submit_failure>
                <observers>
                    <ebayenterprise_inventory_allocation_rollback_observer>
                        <class>ebayenterprise_inventory/observer</class>
                        <method>handleSalesModelServiceQuoteSubmitFailure</method>
                        <type>singleton</type>
                    </ebayenterprise_inventory_allocation_rollback_observer>
                </observers>
            </sales_model_service_quote_submit_failure>
            <checkout_multishipping_refund_all>
                <observers>
                    <ebayenterprise_inventory_allocation_rollback_observer>
                        <class>ebayenterprise_inventory/observer</class>
                        <method>handleSalesModelServiceQuoteSubmitFailure</method>
                        <type>singleton</type>
                    </ebayenterprise_inventory_allocation_rollback_observer>
                </observers>
            </checkout_multishipping_refund_all>
            <!-- After a previously successful order create let's cleanup the inventory session -->
            <ebayenterprise_order_create_successful>
                <observers>
                    <ebayenterprise_inventory_clean_quantity_session_observer>
                        <class>ebayenterprise_inventory/observer</class>
                        <method>handleEbayEnterpriseOrderCreateSuccessful</method>
                        <type>singleton</type>
                    </ebayenterprise_inventory_clean_quantity_session_observer>
                </observers>
            </ebayenterprise_order_create_successful>
        </events>
    </global>
    <frontend>
        <layout>
            <updates>
                <ebayenterprise_inventory module="EbayEnterprise_Inventory">
                    <file>ebayenterprise_inventory.xml</file>
                </ebayenterprise_inventory>
            </updates>
        </layout>
        <translate>
            <modules>
                <EbayEnterprise_Inventory>
                    <files>
                        <default>EbayEnterprise_Inventory.csv</default>
                    </files>
                </EbayEnterprise_Inventory>
            </modules>
        </translate>
    </frontend>
    <adminhtml>
        <translate>
            <modules>
                <EbayEnterprise_Inventory>
                    <files>
                        <default>EbayEnterprise_Inventory.csv</default>
                    </files>
                </EbayEnterprise_Inventory>
            </modules>
        </translate>
    </adminhtml>
    <default>
        <ebayenterprise_inventory>
            <api>
                <service>inventory</service>
            </api>
            <quantity>
                <operation>quantity/get</operation>
                <inventory_expiration>10</inventory_expiration>
                <unavailable_item_handlers>
                    <!--
                        Configure unavailable item handling by product type, if
                        no handler found for a given type, will use default
                    -->
                    <default>ebayenterprise_inventory/quantity_unavailable_item_default</default>
                </unavailable_item_handlers>
            </quantity>
            <details>
                <operation>details/get</operation>
            </details>
            <allocation>
                <create_operation>allocations/create</create_operation>
                <delete_operation>allocations/delete</delete_operation>
            </allocation>
        </ebayenterprise_inventory>
    </default>
    <phpunit>
        <suite>
            <modules>
                <EbayEnterprise_Inventory/>
            </modules>
        </suite>
    </phpunit>
</config>
